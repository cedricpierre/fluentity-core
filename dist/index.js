class G{options={};async call(_){return Promise.resolve({data:void 0})}configure(_){}}var x={GET:"GET",POST:"POST",PUT:"PUT",PATCH:"PATCH",DELETE:"DELETE",HEAD:"HEAD",OPTIONS:"OPTIONS"};class I{static instance;#_;#V;constructor(_){if(I.instance)throw new Error("Fluentity instance already exists. Use getInstance() instead.");this.#V=_,this.#_=_?.adapter??new G,I.instance=this}configure(_){if(!I.instance)throw new Error("Fluentity has not been initialized. Call initialize() first.");this.#V=_,this.#_=_?.adapter??new G}get adapter(){return this.#_}static initialize(_){if(I.instance)throw new Error("Fluentity has already been initialized. Use getInstance() instead.");return new I(_)}static reset(){console.log("resetting fluentity"),I.instance=void 0}static getInstance(){if(!I.instance)throw new Error("Fluentity has not been initialized. Call initialize() first.");return I.instance}call(_){return this.#_.call(_)}static call(_){return I.getInstance().call(_)}}class J{constructor(_){if(_)Object.assign(this,_)}resource;id;parent;query={};sort;direction;limit;offset;page;perPage;method;body;where(_){return this.filter(_),this}filter(_){return this.query={...this.query,..._},this}reset(){return this.query={},this.sort=void 0,this.direction=void 0,this.limit=void 0,this.offset=void 0,this.page=void 0,this.perPage=void 0,this.id=void 0,this.method=void 0,this}toObject(){return Object.entries({query:this.query,method:this.method,sort:this.sort,direction:this.direction,limit:this.limit,offset:this.offset,page:this.page,perPage:this.perPage}).filter(([_,V])=>V!==void 0).reduce((_,[V,W])=>{return _[V]=W,_},{})}}class z{queryBuilder;relatedModel;constructor(_,V,W){if(this.relatedModel=_,this.queryBuilder=new J({resource:W??this.relatedModel.resource}),V?.resource)this.queryBuilder.parent={...V};if(this.relatedModel.scopes)Object.entries(this.relatedModel.scopes).forEach(([X,Y])=>{this[X]=(...Z)=>{return Y(this,...Z)}})}get fluentity(){return I.getInstance()}id(_){return new this.relatedModel({id:_},this.queryBuilder)}async find(_){this.queryBuilder.id=_,this.queryBuilder.method=x.GET;let V=await this.fluentity.adapter.call(this.queryBuilder),W=new this.relatedModel(V.data,this.queryBuilder);return W.queryBuilder.id=_,W}where(_){return this.queryBuilder.where(_),this}filter(_){return this.queryBuilder.filter(_),this}orderBy(_="id",V="asc"){return this.queryBuilder.sort=_,this.queryBuilder.direction=V,this}limit(_){return this.queryBuilder.limit=_,this}offset(_){return this.queryBuilder.offset=_,this}}class A extends z{async get(){this.queryBuilder.method=x.GET,this.queryBuilder.id=this.relatedModel.id;let _=await this.fluentity.adapter.call(this.queryBuilder);return new this.relatedModel(_.data,{...this.queryBuilder})}async update(_,V=x.PUT){this.queryBuilder.method=V,this.queryBuilder.id=this.relatedModel.id;let W=await this.fluentity.adapter.call(this.queryBuilder);return new this.relatedModel(W.data,{...this.queryBuilder})}async delete(){this.queryBuilder.method=x.DELETE,this.queryBuilder.id=this.relatedModel.id,await this.fluentity.adapter.call(this.queryBuilder)}}class L extends z{async all(){return this.queryBuilder.method=x.GET,this.queryBuilder.id=void 0,(await this.fluentity.adapter.call(this.queryBuilder))?.data?.map((V)=>new this.relatedModel(V,{...this.queryBuilder}))}async create(_){this.queryBuilder.method=x.POST,this.queryBuilder.body=_,this.queryBuilder.id=void 0;let V=await this.fluentity.adapter.call(this.queryBuilder);return new this.relatedModel(V.data,{...this.queryBuilder})}async delete(_){this.queryBuilder.method=x.DELETE,this.queryBuilder.id=_,await this.fluentity.adapter.call(this.queryBuilder)}async update(_,V,W=x.PUT){this.queryBuilder.method=W,this.queryBuilder.id=_,this.queryBuilder.body=V;let X=await this.fluentity.adapter.call(this.queryBuilder);return new this.relatedModel(X.data,{...this.queryBuilder})}async paginate(_=1,V=10){return this.queryBuilder.page=_,this.queryBuilder.perPage=V,this.queryBuilder.offset=(_-1)*V,this.queryBuilder.limit=V,(await this.fluentity.adapter.call(this.queryBuilder))?.data?.map((X)=>new this.relatedModel(X,{...this.queryBuilder}))}}class N{static scopes;id;#_;static resource;constructor(_,V){if(_)Object.assign(this,_);return this.#_=V??new J,this.#_.resource=this.constructor.resource,this.#_.id=this.id,this}get queryBuilder(){return this.#_}get fluentity(){return I.getInstance()}static getRelationBuilder(_,V){let W=new J;return new V(_,W,_.constructor.resource)}static id(_){return new this({id:_})}static query(){return N.getRelationBuilder(this,L)}static where(_){return N.getRelationBuilder(this,L).where(_)}static filter(_){return N.getRelationBuilder(this,L).filter(_)}static async all(){return await N.getRelationBuilder(this,L).all()}static async find(_){return await N.getRelationBuilder(this,A).find(_)}static async create(_){return await N.getRelationBuilder(this,L).create(_)}static async update(_,V,W=x.PUT){return await N.getRelationBuilder(this,L).update(_,V,W)}static async delete(_){return N.getRelationBuilder(this,L).delete(_)}async get(){this.#_.method=x.GET;let _=await this.fluentity.adapter.call(this.#_);return Object.assign(this,_.data),this}async save(){if(this.id)return this.update();this.#_.method=x.POST,this.#_.body=this.toObject();let _=await this.fluentity.adapter.call(this.#_);return Object.assign(this,_.data),this}async update(_,V=x.PUT){if(_)Object.assign(this,_);this.#_.method=V,this.#_.body=this.toObject();let W=await this.fluentity.adapter.call(this.#_);return Object.assign(this,W.data),this}async delete(){this.#_.method=x.DELETE,await this.fluentity.adapter.call(this.#_)}async call(_){return this.constructor.call(_)}static async call(_){return await I.getInstance().adapter.call(_)}toObject(){let _={};Object.keys(this).forEach((W)=>{_[W]=this[W]});let V=Object.getOwnPropertyDescriptors(Object.getPrototypeOf(this));for(let[W,X]of Object.entries(V))if(X.get){let Y=this[W];if(Y instanceof N)_[W]=Y.toObject();else if(Array.isArray(Y)&&Y.length>0)_[W]=Y.filter((Z)=>Z instanceof N&&typeof Z.toObject==="function").map((Z)=>Z.toObject())}return _}}var K=(_,V,W)=>{return function(X,Y){Object.defineProperty(X,Y,{get(){return new V(_(),this.queryBuilder,W)},enumerable:!0,configurable:!0})}},a=(_)=>{return function(V,W){let X=Symbol(String(W));Object.defineProperty(V,W,{get(){if(!this[X])this[X]=void 0;let Y=this[X];if(!Y)return Y;let Z=_();if(!Z)return Y;if(Array.isArray(Y))return Y.map(($)=>$ instanceof Z?$:new Z($));else if(Y instanceof Z)return Y;else return new Z(Y)},set(Y){let Z=_();if(!Z){this[X]=Y;return}if(Array.isArray(Y))this[X]=Y.map(($)=>$ instanceof Z?$:new Z($));else if(Y instanceof Z)this[X]=Y;else this[X]=new Z(Y)},enumerable:!0,configurable:!0})}},E=(_,V)=>{return K(_,A,V)},O=(_,V)=>{return K(_,L,V)},l=E,o=O;class U{_cache=new WeakMap;options={baseUrl:"",options:{headers:{"Content-Type":"application/json"}},requestInterceptor:void 0,responseInterceptor:void 0,errorInterceptor:void 0,requestHandler:this.fetchRequestHandler,cacheOptions:{enabled:!1,ttl:300000}};_request;constructor(_){this.options={...this.options,..._}}configure(_){return this.options={...this.options,..._},this}get request(){return this._request}clearCache(){return this._cache=new WeakMap,this}async call(_){try{if(!this.options.baseUrl)throw new Error("baseUrl is required");if(this._request=new Q({url:this.buildUrl(_),method:_.method,body:_.body,options:this.options?.options}),this.options.cacheOptions?.enabled){let W=this._cache.get(this._request);if(W){if(Date.now()-W.timestamp<(this.options.cacheOptions.ttl||0))return W;this._cache.delete(this._request)}}if(this.options.requestInterceptor)Object.assign(this._request,this.options.requestInterceptor.call(this,this._request));let V=await this.options.requestHandler.call(this,this._request);if(this.options.responseInterceptor)V=this.options.responseInterceptor.call(this,V);if(this.options.cacheOptions?.enabled)this._cache.set(this._request,{data:V,timestamp:Date.now()});return V}catch(V){if(this.options.errorInterceptor&&V instanceof Error)this.options.errorInterceptor(V);throw V}}buildUrl(_){return""}async fetchRequestHandler(_){return Promise.resolve(new S)}}class Q{url="";options;method;body;constructor(_){if(_)Object.assign(this,_)}}class S{data={};constructor(_){if(_)Object.assign(this,_)}}class P extends U{constructor(_){super(_);this.options={...this.options,..._}}buildUrl(_){let V=this.toQueryString(_),W=[];W=this.unwrapParents(_,W);let X=W.join("/");if(V)X+=`?${V}`;return this._url=X,decodeURIComponent(this._url)}unwrapParents(_,V){if(_.parent)this.unwrapParents(_.parent,V);if(_.resource&&_.id)V.push(`${_.resource}/${_.id}`);else if(_.resource)V.push(`${_.resource}`);return V}toQueryString(_){let V={..._.query};return V.page=_.page,V.perPage=_.perPage,V.sort=_.sort,V.direction=_.direction,V.limit=_.limit,V.offset=_.offset,Object.entries(V).filter(([W,X])=>X!==void 0).map(([W,X])=>`${W}=${X}`).join("&")}async fetchRequestHandler(_){if(_.options?.headers?.["Content-Type"]==="application/json"&&_.body)_.body=JSON.stringify(_.body);try{let V=await fetch(`${this.options.baseUrl}/${_.url}`,{method:_.method,body:["PUT","POST","PATCH"].includes(_.method)?_.body:null,headers:_.options?.headers,credentials:_.options?.credentials,mode:_.options?.mode,redirect:_.options?.redirect,referrer:_.options?.referrer,cache:_.options?.cache,keepalive:_.options?.keepalive,signal:_.options?.signal});return new S({data:await V.json()})}catch(V){throw new Error(`HTTP error: ${V}`)}}}export{P as RestAdapter,z as RelationBuilder,N as Model,x as Methods,E as HasOne,O as HasMany,I as Fluentity,G as DefaultAdapter,a as Cast,o as BelongsToMany,l as BelongsTo};
