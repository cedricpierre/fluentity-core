class S{options={};async call(_){return Promise.resolve({data:void 0})}configure(_){}}var Z={GET:"GET",POST:"POST",PUT:"PUT",PATCH:"PATCH",DELETE:"DELETE",HEAD:"HEAD",OPTIONS:"OPTIONS"};class x{static instance;#_;#J;constructor(_){if(x.instance)throw new Error("Fluentity instance already exists. Use getInstance() instead.");this.#J=_,this.#_=_?.adapter??new S,x.instance=this}configure(_){if(!x.instance)throw new Error("Fluentity has not been initialized. Call initialize() first.");this.#J=_,this.#_=_?.adapter??new S}get adapter(){return this.#_}static initialize(_){if(x.instance)throw new Error("Fluentity has already been initialized. Use getInstance() instead.");return new x(_)}static reset(){x.instance=void 0}static getInstance(){if(!x.instance)throw new Error("Fluentity has not been initialized. Call initialize() first.");return x.instance}call(_){return this.#_.call(_)}static call(_){return x.getInstance().call(_)}}class z{constructor(_){if(_)Object.assign(this,_)}resource;id;parent;query={};sort;direction;limit;offset;page;perPage;method;body;where(_){return this.filter(_),this}filter(_){return this.query={...this.query,..._},this}reset(){this.id=void 0,this.query={},this.sort=void 0,this.direction=void 0,this.limit=void 0,this.offset=void 0,this.page=void 0,this.perPage=void 0,this.method=void 0,this.body=void 0}toObject(){return Object.entries({query:this.query,method:this.method,sort:this.sort,direction:this.direction,limit:this.limit,offset:this.offset,page:this.page,perPage:this.perPage}).filter(([_,J])=>J!==void 0).reduce((_,[J,V])=>{return _[J]=V,_},{})}}class A{#_;#J;data;constructor(_,J,V){if(this.#J=_,this.#_=new z({resource:V??this.#J.resource}),J?.resource)this.#_.parent={...J};if(this.#J.scopes)Object.entries(this.#J.scopes).forEach(([W,Y])=>{this[W]=(...X)=>{return Y(this,...X)}})}get fluentity(){return x.getInstance()}get queryBuilder(){return this.#_}get relatedModel(){return this.#J}id(_){return new this.#J({id:_},this.#_)}async find(_){this.#_.id=_,this.#_.method=Z.GET;let J=await this.fluentity.adapter.call(this.#_),V=new this.#J(J.data,this.#_);return V.queryBuilder.id=_,V}where(_){return this.#_.where(_),this}filter(_){return this.#_.filter(_),this}orderBy(_="id",J="asc"){return this.#_.sort=_,this.#_.direction=J,this}limit(_){return this.#_.limit=_,this}offset(_){return this.#_.offset=_,this}}class G extends A{async get(){this.queryBuilder.method=Z.GET;let _=await this.fluentity.adapter.call(this.queryBuilder);return this.data=new this.relatedModel(_.data,{...this.queryBuilder})}async update(_,J=Z.PUT){this.queryBuilder.method=J,this.queryBuilder.id=this.relatedModel.id;let V=await this.fluentity.adapter.call(this.queryBuilder);return this.data=new this.relatedModel(V.data,{...this.queryBuilder})}async delete(){this.queryBuilder.method=Z.DELETE,this.queryBuilder.id=this.relatedModel.id,await this.fluentity.adapter.call(this.queryBuilder)}}class L extends A{async all(){this.queryBuilder.method=Z.GET,this.queryBuilder.id=void 0;let _=await this.fluentity.adapter.call(this.queryBuilder);return this.data=_?.data?.map((J)=>new this.relatedModel(J,{...this.queryBuilder}))}async create(_){this.queryBuilder.method=Z.POST,this.queryBuilder.body=_,this.queryBuilder.id=void 0;let J=await this.fluentity.adapter.call(this.queryBuilder);return this.data=new this.relatedModel(J.data,{...this.queryBuilder})}async delete(_){this.queryBuilder.method=Z.DELETE,this.queryBuilder.id=_,await this.fluentity.adapter.call(this.queryBuilder)}async update(_,J,V=Z.PUT){this.queryBuilder.method=V,this.queryBuilder.id=_,this.queryBuilder.body=J;let W=await this.fluentity.adapter.call(this.queryBuilder);return this.data=new this.relatedModel(W.data,{...this.queryBuilder})}async paginate(_=1,J=10){this.queryBuilder.page=_,this.queryBuilder.perPage=J,this.queryBuilder.offset=(_-1)*J,this.queryBuilder.limit=J;let V=await this.fluentity.adapter.call(this.queryBuilder);return this.data=V?.data?.map((W)=>new this.relatedModel(W,{...this.queryBuilder}))}}class N{static scopes;id;#_;static resource;constructor(_,J){if(_)Object.assign(this,_);return this.#_=J??new z,this.#_.resource=this.constructor.resource,this.#_.id=this.id,this}get queryBuilder(){return this.#_}get fluentity(){return x.getInstance()}static getRelationBuilder(_,J){let V=new z;return new J(_,V,_.constructor.resource)}static id(_){return new this({id:_})}static query(){return N.getRelationBuilder(this,L)}static where(_){return N.getRelationBuilder(this,L).where(_)}static filter(_){return N.getRelationBuilder(this,L).filter(_)}static async all(){return await N.getRelationBuilder(this,L).all()}static async find(_){return await N.getRelationBuilder(this,G).find(_)}static async create(_){return await N.getRelationBuilder(this,L).create(_)}static async update(_,J,V=Z.PUT){return await N.getRelationBuilder(this,L).update(_,J,V)}static async delete(_){return N.getRelationBuilder(this,L).delete(_)}async get(){this.#_.method=Z.GET;let _=await this.fluentity.adapter.call(this.#_);return Object.assign(this,_.data),this}async save(){if(this.id)return this.update();this.#_.method=Z.POST,this.#_.body=this.toObject();let _=await this.fluentity.adapter.call(this.#_);return Object.assign(this,_.data),this}async update(_,J=Z.PUT){if(_)Object.assign(this,_);this.#_.method=J,this.#_.body=this.toObject();let V=await this.fluentity.adapter.call(this.#_);return Object.assign(this,V.data),this}async delete(){this.#_.method=Z.DELETE,await this.fluentity.adapter.call(this.#_)}async call(_){return this.constructor.call(_)}static async call(_){return await x.getInstance().adapter.call(_)}toObject(){let _={};Object.keys(this).forEach((V)=>{_[V]=this[V]});let J=Object.getOwnPropertyDescriptors(Object.getPrototypeOf(this));for(let[V,W]of Object.entries(J))if(W.get){let Y=this[V];if(Y instanceof N)_[V]=Y.toObject();else if(Array.isArray(Y)&&Y.length>0)_[V]=Y.filter((X)=>X instanceof N&&typeof X.toObject==="function").map((X)=>X.toObject())}return _}reset(..._){for(let J of _)this[J]=void 0;return this}}var D=(_,J,V)=>{let W=new WeakMap;return function(Y,X){let I=Symbol(String(X));Object.defineProperty(Y,X,{get(){let $=W.get(this)??new J(_(),this.queryBuilder,V);if(W.set(this,$),this[I]!==void 0){let O=this[I],Q=_();if(Array.isArray(O))$.data=O.map((E)=>E instanceof Q?E:new Q(E));else $.data=new Q(O)}return $},set($){this[I]=$},enumerable:!0,configurable:!0})}},i=(_)=>{return function(J,V){let W=Symbol(String(V)),Y=_();Object.defineProperty(J,V,{get(){if(!this[W])this[W]=void 0;let X=this[W];if(!X||!Y)return X;if(Array.isArray(X))return X.map((I)=>I instanceof Y?I:new Y(I));else if(X instanceof Y)return X;else return new Y(X)},set(X){if(!Y){this[W]=X;return}if(Array.isArray(X))this[W]=X.map((I)=>I instanceof Y?I:new Y(I));else if(X instanceof Y)this[W]=X;else this[W]=new Y(X)},enumerable:!0,configurable:!0})}},j=(_,J)=>{return D(_,G,J)},T=(_,J)=>{return D(_,L,J)},r=j,t=T;class K{_cache=new WeakMap;options={baseUrl:"",options:{headers:{"Content-Type":"application/json"}},requestInterceptor:void 0,responseInterceptor:void 0,errorInterceptor:void 0,requestHandler:this.fetchRequestHandler,cacheOptions:{enabled:!1,ttl:300000}};_request=new P;constructor(_){this.options={...this.options,..._}}configure(_){return this.options={...this.options,..._},this}get request(){return this._request}clearCache(){return this._cache=new WeakMap,this}async call(_){try{if(!this.options.baseUrl)throw new Error("baseUrl is required");if(this._request=new P({url:this.buildUrl(_),method:_.method,body:_.body,options:this.options?.options}),this.options.cacheOptions?.enabled){let V=this._cache.get(this._request);if(V){if(Date.now()-V.timestamp<(this.options.cacheOptions.ttl||0))return V;this._cache.delete(this._request)}}if(this.options.requestInterceptor)Object.assign(this._request,this.options.requestInterceptor.call(this,this._request));let J=await this.options.requestHandler.call(this,this._request);if(this.options.responseInterceptor)J=this.options.responseInterceptor.call(this,J);if(this.options.cacheOptions?.enabled)this._cache.set(this._request,{data:J,timestamp:Date.now()});return J}catch(J){if(this.options.errorInterceptor&&J instanceof Error)this.options.errorInterceptor(J);throw J}}buildUrl(_){return""}async fetchRequestHandler(_){return Promise.resolve(new U)}}class P{url="";options;method;body;constructor(_){if(_)Object.assign(this,_)}}class U{data={};constructor(_){if(_)Object.assign(this,_)}}class C extends K{constructor(_){super(_);this.options={...this.options,..._}}buildUrl(_){let J=this.toQueryString(_),V=[];V=this.unwrapParents(_,V);let W=V.join("/");if(J)W+=`?${J}`;return decodeURIComponent(W)}unwrapParents(_,J){if(_.parent)this.unwrapParents(_.parent,J);if(_.resource&&_.id)J.push(`${_.resource}/${_.id}`);else if(_.resource)J.push(`${_.resource}`);return J}toQueryString(_){let J={..._.query};return J.page=_.page,J.perPage=_.perPage,J.sort=_.sort,J.direction=_.direction,J.limit=_.limit,J.offset=_.offset,Object.entries(J).filter(([V,W])=>W!==void 0).map(([V,W])=>`${V}=${W}`).join("&")}async fetchRequestHandler(_){if(_.options?.headers?.["Content-Type"]==="application/json"&&_.body)_.body=JSON.stringify(_.body);try{let J=await fetch(`${this.options.baseUrl}/${_.url}`,{method:_.method,body:["PUT","POST","PATCH"].includes(_.method)?_.body:null,headers:_.options?.headers,credentials:_.options?.credentials,mode:_.options?.mode,redirect:_.options?.redirect,referrer:_.options?.referrer,cache:_.options?.cache,keepalive:_.options?.keepalive,signal:_.options?.signal});return new U({data:await J.json()})}catch(J){throw new Error(`HTTP error: ${J}`)}}}export{C as RestAdapter,A as RelationBuilder,N as Model,Z as Methods,j as HasOne,T as HasMany,x as Fluentity,S as DefaultAdapter,i as Cast,t as BelongsToMany,r as BelongsTo};
